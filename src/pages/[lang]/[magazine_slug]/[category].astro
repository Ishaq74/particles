---
export const prerender = false;

import Layout from '@layouts/Layout.astro';
import { Card, CardHeader, CardContent, CardTitle } from '@components/starwind/card';
import { Icon } from 'astro-icon/components';
import PageHeader from '@components/blog/PageHeader.astro';
import ArticleCard from '@components/blog/ArticleCard.astro';
import NewsletterCard from '@components/blog/NewsletterCard.astro';
import ContributeCard from '@components/blog/ContributeCard.astro';
import CategoriesWithCount from '@components/blog/CategoriesWithCount.astro';
import { loadArticlesForCategory } from '@utils/articleContent';

let articles = [];
let sidebarPopularArticles = [];

const lang: string = Astro.params.lang || 'fr';
const { magazine_slug, category: categorySlug } = Astro.params;
const pageContext = Astro.locals.pageContext;
if (!pageContext || pageContext.type !== 'magazine') {
	throw new Error('Contexte magazine absent ou incorrect');
}
const magazineCategoryId = pageContext.entityId;
const entityConfig = pageContext.entityConfig;

let pageTitle = '';
let pageDescription = '';
let magazineSlug: string = typeof pageContext.slug === 'string' && pageContext.slug
	? pageContext.slug
	: (magazine_slug || 'magazine');
let magazineCategoryIcon: string | null = null;
let categoryIcon: string | null = null;
let category: any = (pageContext as any).category ?? null;
let translation: any = null;

const { articles: articleSummaries, popular, currentCategory, rootCategory, childCategories } = await loadArticlesForCategory(
	entityConfig,
	category?.id ?? pageContext.categoryId ?? magazineCategoryId,
	lang,
);

const rootCategoryEntry = (pageContext as any).entity ?? rootCategory?.entry ?? null;
const resolvedCategory = category ?? currentCategory?.entry ?? null;
const resolvedCategoryLocalized = currentCategory ?? (resolvedCategory ? { ...resolvedCategory, slug: currentCategory?.slug } : null);
const resolvedCategorySlug = resolvedCategoryLocalized?.slug ?? categorySlug ?? '';

if (rootCategory) {
	magazineCategoryIcon = rootCategory.entry.data.iconName ?? null;
	magazineSlug = pageContext.slug ?? rootCategory.slug ?? magazineSlug;
	pageDescription = rootCategory.description ?? pageDescription;
}

if (resolvedCategoryLocalized) {
	pageTitle = resolvedCategoryLocalized.name;
	pageDescription = resolvedCategoryLocalized.description
		|| (lang === 'fr' ? 'Découvrez tous nos articles sur ce sujet.' : 'Discover all our articles on this topic.');
	categoryIcon = resolvedCategoryLocalized.entry.data.iconName ?? null;
}

if (!pageTitle && resolvedCategory) {
	const fallbackTranslation = (resolvedCategory.data as any).translations?.[0];
	pageTitle = fallbackTranslation?.name ?? resolvedCategory.data.slug;
	categoryIcon = categoryIcon ?? (resolvedCategory.data as any).iconName ?? null;
}

articles = articleSummaries;
sidebarPopularArticles = popular;

function getLocalizedUrl(targetLang: string) {
	const targetMagazineSlug = rootCategory ? (rootCategory.slug ?? magazineSlug) : magazineSlug;
	const targetCategorySlug = resolvedCategoryLocalized?.slug ?? resolvedCategorySlug;
	return `/${targetLang}/${targetMagazineSlug}/${targetCategorySlug}`;
}
---

<Layout title={pageTitle} lang={lang}>
	<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
		<PageHeader
			title={pageTitle}
			description={pageDescription}
			lang={lang}
			magazineSlug={magazineSlug}
			breadcrumbItems={[
				{ label: lang === 'fr' ? 'Accueil' : lang === 'en' ? 'Home' : 'Inicio', url: `/${lang}/`, icon: 'openmoji:house' },
				{ label: pageTitle, icon: categoryIcon || 'openmoji:books', isCurrent: true },
			]}
			icon={categoryIcon || 'openmoji:books'}
		/>

		<div class="grid grid-cols-1 lg:grid-cols-3 lg:gap-12">
			<div class="lg:col-span-2">
				{/* Articles de la catégorie */}
				<section>
					<h2 class="text-3xl font-bold text-gray-800 mb-6">{pageTitle}</h2>
					<div class="space-y-6">
						{articles.length > 0 ? articles.map(({ article, author, title, summary, article_featured_image_url, article_featured_image_alt, category_icon_name, category_name, category_seo_slug, article_seo_slug, publication_date, read_time_minutes, view_count }) => (
							<ArticleCard
								article={article}
								author={author}
								title={title}
								summary={summary}
								article_featured_image_url={article_featured_image_url}
								article_featured_image_alt={article_featured_image_alt}
								category_icon_name={category_icon_name}
								category_name={category_name}
								category_seo_slug={category_seo_slug}
								article_seo_slug={article_seo_slug}
								publication_date={publication_date}
								read_time_minutes={read_time_minutes}
								view_count={view_count}
								lang={lang}
								magazineSlug={magazineSlug}
								variantData="full"
								variantStyle="horizontal"
							/>
						)) : <p class="text-gray-500">Aucun article dans cette catégorie pour le moment.</p>}
					</div>
				</section>
			</div>

			{/* Sidebar Section */}
			<div class="mt-12 lg:mt-0">
				<aside class="space-y-8 sticky top-8">
					{/* Categories Card */}
					<CategoriesWithCount parentId={magazineCategoryId} magazineSlug={magazineSlug} />

					<NewsletterCard />

					{/* Popular Articles Card */}
					<Card>
						<CardHeader><CardTitle class="flex items-center gap-2"><Icon name="openmoji:rocket" class="h-5 w-5"/> Populaires dans "{pageTitle}"</CardTitle></CardHeader>
						<CardContent>
							<ul class="space-y-4">
								{sidebarPopularArticles.length > 0 ? sidebarPopularArticles.map(({ article, author, title, summary, article_featured_image_url, article_featured_image_alt, category_icon_name, category_name, category_seo_slug, article_seo_slug, publication_date, read_time_minutes, view_count }) => (
									<li>
										<ArticleCard
											article={article}
											author={author}
											title={title}
											summary={summary}
											article_featured_image_url={article_featured_image_url}
											article_featured_image_alt={article_featured_image_alt}
											category_icon_name={category_icon_name}
											category_name={category_name}
											category_seo_slug={category_seo_slug}
											article_seo_slug={article_seo_slug}
											publication_date={publication_date}
											read_time_minutes={read_time_minutes}
											view_count={view_count}
											lang={lang}
											magazineSlug={magazineSlug}
											variantData="popular"
											variantStyle="compact"
										/>
									</li>
								)) : <li class="text-gray-500 text-sm">Aucun article populaire pour le moment.</li>}
							</ul>
						</CardContent>
					</Card>

					<ContributeCard />
				</aside>
			</div>
		</div>
	</main>
</Layout>
